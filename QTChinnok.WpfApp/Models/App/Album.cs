//@GeneratedCode
namespace QTChinnok.WpfApp.Models.App
{
    using System;
    /// <summary>
    /// Generated by the generator.
    /// </summary>
    
    public partial class Album
    {
        /// <summary>
        /// Generated by the generator
        /// </summary>
        static Album()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        /// <summary>
        /// Generated by the generator
        /// </summary>
        public Album()
        {
            Constructing();
            
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        /// <summary>
        /// Property 'ArtistId' generated by the generator.
        /// </summary>
        public IdType ArtistId { get; set; }
        /// <summary>
        /// Property 'Title' generated by the generator.
        /// </summary>
        public System.String Title { get; set; } = string.Empty;
        /// <summary>
        /// Property 'Artist' generated by the generator.
        /// </summary>
        public QTChinnok.WpfApp.Models.Base.Artist? Artist { get; set; }
        /// <summary>
        /// Property 'Tracks' generated by the generator.
        /// </summary>
        public System.Collections.Generic.List<QTChinnok.WpfApp.Models.App.Track> Tracks { get; set; } = new();
        /// <summary>
        /// Property 'MusicCollections' generated by the generator.
        /// </summary>
        public System.Collections.Generic.List<QTChinnok.WpfApp.Models.App.MusicCollection> MusicCollections { get; set; } = new();
        /// <summary>
        /// Generated by the generator
        /// </summary>
        public static QTChinnok.WpfApp.Models.App.Album Create()
        {
            BeforeCreate();
            var result = new QTChinnok.WpfApp.Models.App.Album();
            AfterCreate(result);
            return result;
        }
        /// <summary>
        /// Generated by the generator
        /// </summary>
        public static QTChinnok.WpfApp.Models.App.Album Create(object other)
        {
            BeforeCreate(other);
            var result = new QTChinnok.WpfApp.Models.App.Album();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTChinnok.WpfApp.Models.App.Album instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTChinnok.WpfApp.Models.App.Album instance, object other);
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public override bool Equals(object? obj)
        {
            bool result = false;
            if (obj is Models.App.Album other)
            {
                result = Id == other.Id;
            }
            return result;
        }
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public override int GetHashCode()
        {
            return this.CalculateHashCode(Id, ArtistId, Title, Artist, Tracks, MusicCollections);
        }
    }
}
