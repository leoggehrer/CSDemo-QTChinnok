//@GeneratedCode
namespace QTChinnok.Logic.DataContext
{
    /// <summary>
    /// Generated by the generator
    /// </summary>
    partial class ProjectDbContext
    {
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public DbSet<Entities.Base.Artist> ArtistSet{ get; set; }
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public DbSet<Entities.Base.Genre> GenreSet{ get; set; }
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public DbSet<Entities.Base.MediaType> MediaTypeSet{ get; set; }
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public DbSet<Entities.App.Album> AlbumSet{ get; set; }
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public DbSet<Entities.App.MusicCollection> MusicCollectionSet{ get; set; }
        /// <summary>
        /// Generated by the generator.
        /// </summary>
        public DbSet<Entities.App.Track> TrackSet{ get; set; }
        
        /// <summary>
        /// Generated by the generator
        /// </summary>
        partial void GetGeneratorDbSet<E>(ref DbSet<E>? dbSet, ref bool handled) where E : Entities.EntityObject
        {
            if (typeof(E) == typeof(Entities.Base.Artist))
            {
                dbSet = ArtistSet as DbSet<E>;
                handled = true;
            }
            else if (typeof(E) == typeof(Entities.Base.Genre))
            {
                dbSet = GenreSet as DbSet<E>;
                handled = true;
            }
            else if (typeof(E) == typeof(Entities.Base.MediaType))
            {
                dbSet = MediaTypeSet as DbSet<E>;
                handled = true;
            }
            else if (typeof(E) == typeof(Entities.App.Album))
            {
                dbSet = AlbumSet as DbSet<E>;
                handled = true;
            }
            else if (typeof(E) == typeof(Entities.App.MusicCollection))
            {
                dbSet = MusicCollectionSet as DbSet<E>;
                handled = true;
            }
            else if (typeof(E) == typeof(Entities.App.Track))
            {
                dbSet = TrackSet as DbSet<E>;
                handled = true;
            }
        }
    }
}
